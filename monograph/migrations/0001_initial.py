# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('member', '0003_auto_20160310_1826'),
    ]

    operations = [
        migrations.CreateModel(
            name='MonoBuy',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(help_text=b'*\xe5\xbf\x85\xe5\xa1\xab*, \xe7\x94\xa8\xe4\xba\x8e\xe6\x8f\x90\xe7\xa4\xba\xe8\xaf\xa5\xe8\xb4\xad\xe4\xb9\xb0\xe9\x93\xbe\xe6\x8e\xa5\xe5\xb1\x9e\xe4\xba\x8e\xe5\x93\xaa\xe4\xb8\xaa\xe4\xb8\x93\xe8\x91\x97,\xe4\xbe\x8b\xe5\xa6\x82,"\xe4\xb8\x93\xe8\x91\x97\xe5\x90\x8d-\xe9\x93\xbe\xe6\x8e\xa5\xe5\x90\x8d-\xe4\xbc\x98\xe5\x85\x88\xe7\xba\xa7"', max_length=100, verbose_name=b'\xe9\x93\xbe\xe6\x8e\xa5\xe5\x90\x8d\xe7\xa7\xb0')),
                ('link', models.URLField(help_text=b'*\xe5\xbf\x85\xe5\xa1\xab*', verbose_name=b'\xe9\x93\xbe\xe6\x8e\xa5url')),
                ('priority', models.SmallIntegerField(default=0, help_text=b'*\xe5\xbf\x85\xe5\xa1\xab*, \xe4\xbb\x8e0\xe5\xbc\x80\xe5\xa7\x8b\xe7\x9a\x84\xe6\x95\xb4\xe6\x95\xb0,\xe7\x94\xa8\xe4\xba\x8e\xe8\xae\xbe\xe7\xbd\xae\xe9\x93\xbe\xe6\x8e\xa5\xe7\x9a\x84\xe9\xa1\xba\xe5\xba\x8f,\xe6\x95\xb0\xe8\xb6\x8a\xe5\xa4\xa7,\xe4\xbc\x98\xe5\x85\x88\xe7\xba\xa7\xe8\xb6\x8a\xe9\xab\x98,\xe9\xbb\x98\xe8\xae\xa4\xe4\xb8\xba0', verbose_name=b'\xe5\xba\x8f\xe5\x8f\xb7')),
                ('add_time', models.DateField(auto_now_add=True, verbose_name=b'\xe5\x88\x9b\xe5\xbb\xba\xe6\x97\xb6\xe9\x97\xb4')),
            ],
            options={
                'db_table': 'monograph_buy',
                'verbose_name': '\u8d2d\u4e70\u94fe\u63a5',
                'verbose_name_plural': '\u8d2d\u4e70\u94fe\u63a5',
            },
        ),
        migrations.CreateModel(
            name='MonoCover',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(help_text=b'*\xe5\xbf\x85\xe5\xa1\xab*, \xe7\x94\xa8\xe4\xba\x8e\xe6\x8f\x90\xe7\xa4\xba\xe8\xaf\xa5\xe5\xb0\x81\xe9\x9d\xa2\xe5\x9b\xbe\xe7\x89\x87\xe5\xb1\x9e\xe4\xba\x8e\xe5\x93\xaa\xe4\xb8\xaa\xe4\xb8\x93\xe8\x91\x97,\xe4\xbe\x8b\xe5\xa6\x82,"\xe4\xb8\x93\xe8\x91\x97\xe5\x90\x8d-\xe5\xb0\x81\xe9\x9d\xa2\xe5\x90\x8d-\xe4\xbc\x98\xe5\x85\x88\xe7\xba\xa7"', max_length=100, verbose_name=b'\xe5\xb0\x81\xe9\x9d\xa2\xe5\x90\x8d\xe7\xa7\xb0')),
                ('priority', models.SmallIntegerField(default=0, help_text=b'*\xe5\xbf\x85\xe5\xa1\xab*, \xe4\xbb\x8e0\xe5\xbc\x80\xe5\xa7\x8b\xe7\x9a\x84\xe6\x95\xb4\xe6\x95\xb0,\xe7\x94\xa8\xe4\xba\x8e\xe8\xae\xbe\xe7\xbd\xae\xe5\xb0\x81\xe9\x9d\xa2\xe5\x9b\xbe\xe7\x9a\x84\xe9\xa1\xba\xe5\xba\x8f,\xe6\x95\xb0\xe8\xb6\x8a\xe5\xa4\xa7,\xe4\xbc\x98\xe5\x85\x88\xe7\xba\xa7\xe8\xb6\x8a\xe9\xab\x98,\xe9\xbb\x98\xe8\xae\xa4\xe4\xb8\xba0', verbose_name=b'\xe5\xba\x8f\xe5\x8f\xb7')),
                ('add_time', models.DateField(auto_now_add=True, verbose_name=b'\xe5\x88\x9b\xe5\xbb\xba\xe6\x97\xb6\xe9\x97\xb4')),
                ('img', models.ImageField(upload_to=b'monograph/cover/', verbose_name=b'\xe5\x9b\xbe\xe7\x89\x87')),
            ],
            options={
                'db_table': 'monograph_cover',
                'verbose_name': '\u4e13\u8457\u5c01\u9762\u56fe',
                'verbose_name_plural': '\u4e13\u8457\u5c01\u9762\u56fe',
            },
        ),
        migrations.CreateModel(
            name='MonoList',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(help_text=b'*\xe5\xbf\x85\xe5\xa1\xab*', max_length=50, verbose_name=b'\xe4\xb8\x93\xe8\x91\x97\xe5\x90\x8d\xe7\xa7\xb0')),
                ('monolist_abstract', models.TextField(help_text=b'*\xe5\xbf\x85\xe5\xa1\xab*', verbose_name=b'\xe6\x8f\x8f\xe8\xbf\xb0')),
                ('all_authors', models.CharField(help_text=b'*\xe5\xbf\x85\xe5\xa1\xab*, \xe8\xaf\xb7\xe6\x8c\x89\xe9\xa1\xba\xe5\xba\x8f\xe8\xbe\x93\xe5\x85\xa5\xe6\x89\x80\xe6\x9c\x89\xe4\xbd\x9c\xe8\x80\x85\xe7\xac\x94\xe5\x90\x8d\xef\xbc\x8c\xe5\xa6\x82\xe2\x80\x9c\xe5\xbc\xa0\xe4\xb8\x89\xef\xbc\x8c\xe6\x9d\x8e\xe5\x9b\x9b\xef\xbc\x8c\xe7\x8e\x8b\xe4\xba\x94\xe2\x80\x9d', max_length=50, verbose_name=b'\xe6\x89\x80\xe6\x9c\x89\xe4\xbd\x9c\xe8\x80\x85')),
                ('pub_time', models.DateField(help_text=b'*\xe5\xbf\x85\xe5\xa1\xab*', verbose_name=b'\xe5\x87\xba\xe7\x89\x88\xe6\x97\xb6\xe9\x97\xb4')),
                ('pub_pulications', models.CharField(max_length=50, verbose_name=b'\xe5\x87\xba\xe7\x89\x88\xe7\xa4\xbe', blank=True)),
                ('authors', models.ManyToManyField(help_text=b'\xe5\x9c\xa8\xe5\x88\x97\xe8\xa1\xa8\xe4\xb8\xad\xe9\x80\x89\xe6\x8b\xa9\xe5\x8c\x85\xe5\x90\xab\xe7\x9a\x84\xe4\xbd\x9c\xe8\x80\x85', to='member.Member', verbose_name='\u4f5c\u8005', blank=True)),
                ('buys', models.ManyToManyField(to='monograph.MonoBuy', verbose_name='\u8d2d\u4e70\u94fe\u63a5', blank=True)),
                ('covers', models.ManyToManyField(to='monograph.MonoCover', verbose_name='\u5c01\u9762\u56fe', blank=True)),
            ],
            options={
                'db_table': 'monograph_list',
                'verbose_name': '\u4e13\u8457\u5217\u8868',
                'verbose_name_plural': '\u4e13\u8457\u5217\u8868',
            },
        ),
    ]
